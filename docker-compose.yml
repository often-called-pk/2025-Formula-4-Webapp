version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: formula4-postgres
    environment:
      POSTGRES_DB: formula4_analytics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - formula4-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: formula4-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - formula4-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: formula4-backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: formula4_analytics
      DB_USER: postgres
      DB_PASSWORD: password
      REDIS_URL: redis://redis:6379
      DATA_SERVICE_URL: http://data-service:8001
      FRONTEND_URL: http://localhost:3000
      JWT_SECRET: dev-secret-key-change-in-production
    ports:
      - "3001:3001"
    volumes:
      - ./backend/src:/app/src
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - formula4-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Data Processing Service
  data-service:
    build:
      context: ./data-service
      dockerfile: Dockerfile
    container_name: formula4-data-service
    environment:
      HOST: 0.0.0.0
      PORT: 8001
      DATABASE_URL: postgresql://postgres:password@postgres:5432/formula4_analytics
      REDIS_URL: redis://redis:6379
      LOG_LEVEL: info
    ports:
      - "8001:8001"
    volumes:
      - ./data-service:/app
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - formula4-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Dashboard
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile.dev
    container_name: formula4-dashboard
    environment:
      VITE_API_URL: http://localhost:3001
      VITE_DATA_SERVICE_URL: http://localhost:8001
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./dashboard/src:/app/src
      - ./dashboard/public:/app/public
      - /app/node_modules
    depends_on:
      - backend
      - data-service
    networks:
      - formula4-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  formula4-network:
    driver: bridge
    name: formula4-network